const INTEGRITY_CHECKSUM="c5f7f8e188b673ea4e677df7ea3c5a39",IS_MOCKED_RESPONSE=Symbol("isMockedResponse"),activeClientIds=new Set;async function handleRequest(e,t){const n=await resolveMainClient(e),s=await getResponse(e,n,t);return n&&activeClientIds.has(n.id)&&async function(){const e=s.clone();sendToClient(n,{type:"RESPONSE",payload:{requestId:t,isMockedResponse:IS_MOCKED_RESPONSE in s,type:e.type,status:e.status,statusText:e.statusText,body:e.body,headers:Object.fromEntries(e.headers.entries())}},[e.body])}(),s}async function resolveMainClient(e){const t=await self.clients.get(e.clientId);if("top-level"===t?.frameType)return t;return(await self.clients.matchAll({type:"window"})).filter((e=>"visible"===e.visibilityState)).find((e=>activeClientIds.has(e.id)))}async function getResponse(e,t,n){const{request:s}=e,i=s.clone();function r(){const e=Object.fromEntries(i.headers.entries());return delete e["x-msw-intention"],fetch(i,{headers:e})}if(!t)return r();if(!activeClientIds.has(t.id))return r();const a=s.headers.get("x-msw-intention");if(["bypass","passthrough"].includes(a))return r();const o=await s.arrayBuffer(),c=await sendToClient(t,{type:"REQUEST",payload:{id:n,url:s.url,mode:s.mode,method:s.method,headers:Object.fromEntries(s.headers.entries()),cache:s.cache,credentials:s.credentials,destination:s.destination,integrity:s.integrity,redirect:s.redirect,referrer:s.referrer,referrerPolicy:s.referrerPolicy,body:o,keepalive:s.keepalive}},[o]);switch(c.type){case"MOCK_RESPONSE":return respondWithMock(c.data);case"MOCK_NOT_FOUND":return r()}return r()}function sendToClient(e,t,n=[]){return new Promise(((s,i)=>{const r=new MessageChannel;r.port1.onmessage=e=>{if(e.data&&e.data.error)return i(e.data.error);s(e.data)},e.postMessage(t,[r.port2].concat(n.filter(Boolean)))}))}async function respondWithMock(e){if(0===e.status)return Response.error();const t=new Response(e.body,e);return Reflect.defineProperty(t,IS_MOCKED_RESPONSE,{value:!0,enumerable:!0}),t}self.addEventListener("install",(function(){self.skipWaiting()})),self.addEventListener("activate",(function(e){e.waitUntil(self.clients.claim())})),self.addEventListener("message",(async function(e){const t=e.source.id;if(!t||!self.clients)return;const n=await self.clients.get(t);if(!n)return;const s=await self.clients.matchAll({type:"window"});switch(e.data){case"KEEPALIVE_REQUEST":sendToClient(n,{type:"KEEPALIVE_RESPONSE"});break;case"INTEGRITY_CHECK_REQUEST":sendToClient(n,{type:"INTEGRITY_CHECK_RESPONSE",payload:INTEGRITY_CHECKSUM});break;case"MOCK_ACTIVATE":activeClientIds.add(t),sendToClient(n,{type:"MOCKING_ENABLED",payload:!0});break;case"MOCK_DEACTIVATE":activeClientIds.delete(t);break;case"CLIENT_CLOSED":{activeClientIds.delete(t);const e=s.filter((e=>e.id!==t));0===e.length&&self.registration.unregister();break}}})),self.addEventListener("fetch",(function(e){const{request:t}=e;if("navigate"===t.mode)return;if("only-if-cached"===t.cache&&"same-origin"!==t.mode)return;if(0===activeClientIds.size)return;const n=crypto.randomUUID();e.respondWith(handleRequest(e,n))}));